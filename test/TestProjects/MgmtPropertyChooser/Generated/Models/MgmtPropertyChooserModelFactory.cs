// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using MgmtPropertyChooser;

namespace MgmtPropertyChooser.Models
{
    internal static class MgmtPropertyChooserModelFactory
    {

        /// <summary> Initializes a new instance of VirtualMachineExtension. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="forceUpdateTag"> How the extension handler should be forced to update even if the extension configuration has not changed. </param>
        /// <param name="publisher"> The name of the extension handler publisher. </param>
        /// <param name="typePropertiesType"> Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;. </param>
        /// <param name="typeHandlerVersion"> Specifies the version of the script handler. </param>
        /// <param name="autoUpgradeMinorVersion"> Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. </param>
        /// <param name="enableAutomaticUpgrade"> Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. </param>
        /// <param name="settings"> Json formatted public settings for the extension. </param>
        /// <param name="protectedSettings"> The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. </param>
        /// <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        public static VirtualMachineExtension VirtualMachineExtension(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, IDictionary<string, string> tags = default, AzureLocation location = default, string forceUpdateTag = default, string publisher = default, string typePropertiesType = default, string typeHandlerVersion = default, bool? autoUpgradeMinorVersion = default, bool? enableAutomaticUpgrade = default, BinaryData settings = default, BinaryData protectedSettings = default, string provisioningState = default)
        {
            return new VirtualMachineExtension(id, name, resourceType, systemData, tags, location, forceUpdateTag, publisher, typePropertiesType, typeHandlerVersion, autoUpgradeMinorVersion, enableAutomaticUpgrade, settings, protectedSettings, provisioningState);
        }

        /// <summary> Initializes a new instance of MgmtPropertyChooserResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        public static MgmtPropertyChooserResourceData MgmtPropertyChooserResourceData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, SystemData systemData = default, string location = default, IDictionary<string, string> tags = default)
        {
            return new MgmtPropertyChooserResourceData(id, name, resourceType, systemData, location, tags);
        }

        /// <summary> Initializes a new instance of IdentityWithRenamedProperty. </summary>
        /// <param name="testPrincipalId"> The principal id of virtual machine identity. This property will only be provided for a system assigned identity. </param>
        /// <param name="tenantId"> The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity. </param>
        /// <param name="resourceIdentityType"> The type of identity used for the virtual machine. The type &apos;SystemAssigned, UserAssigned&apos; includes both an implicitly created identity and a set of user assigned identities. The type &apos;None&apos; will remove any identities from the virtual machine. </param>
        /// <param name="userAssignedIdentities"> The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&apos;. </param>
        public static IdentityWithRenamedProperty IdentityWithRenamedProperty(string testPrincipalId = default, string tenantId = default, ResourceIdentityType? resourceIdentityType = default, IDictionary<string, UserAssignedIdentity> userAssignedIdentities = default)
        {
            return new IdentityWithRenamedProperty(testPrincipalId, tenantId, resourceIdentityType, userAssignedIdentities);
        }

        /// <summary> Initializes a new instance of IdentityWithDifferentPropertyType. </summary>
        /// <param name="principalId"> The principal id of virtual machine identity. This property will only be provided for a system assigned identity. </param>
        /// <param name="tenantId"> The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity. </param>
        /// <param name="resourceIdentityType"> The type of identity used for the virtual machine. The type &apos;SystemAssigned, UserAssigned&apos; includes both an implicitly created identity and a set of user assigned identities. The type &apos;None&apos; will remove any identities from the virtual machine. </param>
        /// <param name="userAssignedIdentities"> The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&apos;. </param>
        public static IdentityWithDifferentPropertyType IdentityWithDifferentPropertyType(string principalId = default, int? tenantId = default, ResourceIdentityType? resourceIdentityType = default, IDictionary<string, UserAssignedIdentity> userAssignedIdentities = default)
        {
            return new IdentityWithDifferentPropertyType(principalId, tenantId, resourceIdentityType, userAssignedIdentities);
        }

        /// <summary> Initializes a new instance of IdentityWithNoUserIdentity. </summary>
        /// <param name="principalId"> The principal id of virtual machine identity. This property will only be provided for a system assigned identity. </param>
        /// <param name="tenantId"> The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity. </param>
        /// <param name="resourceIdentityType"> The type of identity used for the virtual machine. The type &apos;SystemAssigned, UserAssigned&apos; includes both an implicitly created identity and a set of user assigned identities. The type &apos;None&apos; will remove any identities from the virtual machine. </param>
        public static IdentityWithNoUserIdentity IdentityWithNoUserIdentity(string principalId = default, string tenantId = default, ResourceIdentityType? resourceIdentityType = default)
        {
            return new IdentityWithNoUserIdentity(principalId, tenantId, resourceIdentityType);
        }

        /// <summary> Initializes a new instance of IdentityWithNoSystemIdentity. </summary>
        /// <param name="resourceIdentityType"> The type of identity used for the virtual machine. The type &apos;SystemAssigned, UserAssigned&apos; includes both an implicitly created identity and a set of user assigned identities. The type &apos;None&apos; will remove any identities from the virtual machine. </param>
        /// <param name="userAssignedIdentities"> The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: &apos;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}&apos;. </param>
        public static IdentityWithNoSystemIdentity IdentityWithNoSystemIdentity(ResourceIdentityType? resourceIdentityType = default, IDictionary<string, UserAssignedIdentity> userAssignedIdentities = default)
        {
            return new IdentityWithNoSystemIdentity(resourceIdentityType, userAssignedIdentities);
        }

        /// <summary> Initializes a new instance of CloudError. </summary>
        /// <param name="error"> Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). </param>
        /// <param name="anotherError"> Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). </param>
        public static CloudError CloudError(ErrorDetail error = default, ErrorDetail anotherError = default)
        {
            return new CloudError(error, anotherError);
        }

        /// <summary> Initializes a new instance of ErrorResponse. </summary>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="target"> The error target. </param>
        /// <param name="details"> The error details. </param>
        /// <param name="additionalInfo"> The error additional info. </param>
        public static ErrorResponse ErrorResponse(string code = default, string message = default, string target = default, IReadOnlyList<ErrorDetail> details = default, IReadOnlyList<Azure.ResourceManager.Models.ErrorAdditionalInfo> additionalInfo = default)
        {
            return new ErrorResponse(code, message, target, details, additionalInfo);
        }

        /// <summary> Initializes a new instance of ErrorAdditionalInfo. </summary>
        /// <param name="errorAdditionalInfoType"> The additional info type. </param>
        /// <param name="info"> The additional info. </param>
        public static ErrorAdditionalInfo ErrorAdditionalInfo(string errorAdditionalInfoType = default, BinaryData info = default)
        {
            return new ErrorAdditionalInfo(errorAdditionalInfoType, info);
        }

        /// <summary> Initializes a new instance of ErrorResponseWithAnotherName. </summary>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="target"> The error target. </param>
        /// <param name="details"> The error details. </param>
        /// <param name="additionalInfo"> The error additional info. </param>
        public static ErrorResponseWithAnotherName ErrorResponseWithAnotherName(string code = default, string message = default, string target = default, IReadOnlyList<ErrorDetail> details = default, IReadOnlyList<Azure.ResourceManager.Models.ErrorAdditionalInfo> additionalInfo = default)
        {
            return new ErrorResponseWithAnotherName(code, message, target, details, additionalInfo);
        }
    }
}
