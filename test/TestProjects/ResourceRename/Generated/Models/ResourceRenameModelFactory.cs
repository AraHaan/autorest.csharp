// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using ResourceRename;

namespace ResourceRename.Models
{
    internal static class ResourceRenameModelFactory
    {
        /// <summary> Initializes a new instance of SshPublicKeysGroupListResult. </summary>
        /// <param name="value"> The list of SSH public keys. </param>
        /// <param name="nextLink"> The URI to fetch the next page of SSH public keys. Call ListNext() with this URI to fetch the next page of SSH public keys. </param>
        public static SshPublicKeysGroupListResult SshPublicKeysGroupListResult(IReadOnlyList<SshPublicKeyInfoData> value = default, string nextLink = default)
        {
            return new SshPublicKeysGroupListResult(value, nextLink);
        }

        /// <summary> Initializes a new instance of SshPublicKeyProperties. </summary>
        /// <param name="path"> Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys. </param>
        /// <param name="keyData"> SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. &lt;br&gt;&lt;br&gt; For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json). </param>
        public static SshPublicKeyProperties SshPublicKeyProperties(string path = default, string keyData = default)
        {
            return new SshPublicKeyProperties(path, keyData);
        }
    }
}
