// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Fake.Models;
using Azure.ResourceManager.Models;

namespace ReferenceTypes.Models
{
    public static class ReferenceTypesModelFactory
    {
        /// <summary> Initializes a new instance of ReferenceTypesSku. </summary>
        /// <param name="name"> The name of the SKU. Ex - P3. It is typically a letter+number code. </param>
        /// <param name="tier"> This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. </param>
        /// <param name="size"> The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. </param>
        /// <param name="family"> If the service has different generations of hardware, for the same SKU, then that can be captured here. </param>
        /// <param name="capacity"> If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. </param>
        public static ReferenceTypesSku ReferenceTypesSku(string name = default, ReferenceTypesSkuTier? tier = default, string size = default, string family = default, int? capacity = default)
        {
            return new ReferenceTypesSku(name, tier, size, family, capacity);
        }

        /// <summary> Initializes a new instance of ReferenceTypesPlan. </summary>
        /// <param name="name"> A user defined name of the 3rd Party Artifact that is being procured. </param>
        /// <param name="publisher"> The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic. </param>
        /// <param name="product"> The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. </param>
        /// <param name="promotionCode"> A publisher provided promotion code as provisioned in Data Market for the said product/artifact. </param>
        /// <param name="version"> The version of the desired product/artifact. </param>
        public static ReferenceTypesPlan ReferenceTypesPlan(string name = default, string publisher = default, string product = default, string promotionCode = default, string version = default)
        {
            return new ReferenceTypesPlan(name, publisher, product, promotionCode, version);
        }

        /// <summary> Initializes a new instance of ErrorDetail. </summary>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="target"> The error target. </param>
        /// <param name="details"> The error details. </param>
        /// <param name="additionalInfo"> The error additional info. </param>
        public static Azure.ResourceManager.Fake.Models.ErrorDetail ErrorDetail(string code = default, string message = default, string target = default, IReadOnlyList<Azure.ResourceManager.Fake.Models.ErrorDetail> details = default, IReadOnlyList<Azure.ResourceManager.Fake.Models.ErrorAdditionalInfo> additionalInfo = default)
        {
            return new Azure.ResourceManager.Fake.Models.ErrorDetail(code, message, target, details, additionalInfo);
        }

        /// <summary> Initializes a new instance of ErrorAdditionalInfo. </summary>
        /// <param name="errorAdditionalInfoType"> The additional info type. </param>
        /// <param name="info"> The additional info. </param>
        public static Azure.ResourceManager.Fake.Models.ErrorAdditionalInfo ErrorAdditionalInfo(string errorAdditionalInfoType = default, BinaryData info = default)
        {
            return new Azure.ResourceManager.Fake.Models.ErrorAdditionalInfo(errorAdditionalInfoType, info);
        }

        /// <summary> Initializes a new instance of ErrorResponse. </summary>
        /// <param name="error"> The error object. </param>
        public static ErrorResponse ErrorResponse(Azure.ResourceManager.Fake.Models.ErrorDetail error = default)
        {
            return new ErrorResponse(error);
        }

        /// <summary> Initializes a new instance of SystemData. </summary>
        /// <param name="createdBy"> The identity that created the resource. </param>
        /// <param name="createdByType"> The type of identity that created the resource. </param>
        /// <param name="createdAt"> The timestamp of resource creation (UTC). </param>
        /// <param name="lastModifiedBy"> The identity that last modified the resource. </param>
        /// <param name="lastModifiedByType"> The type of identity that last modified the resource. </param>
        /// <param name="lastModifiedAt"> The timestamp of resource last modification (UTC). </param>
        public static Azure.ResourceManager.Fake.Models.SystemData SystemData(string createdBy = default, Azure.ResourceManager.Fake.Models.CreatedByType? createdByType = default, DateTimeOffset? createdAt = default, string lastModifiedBy = default, Azure.ResourceManager.Fake.Models.CreatedByType? lastModifiedByType = default, DateTimeOffset? lastModifiedAt = default)
        {
            return new Azure.ResourceManager.Fake.Models.SystemData(createdBy, createdByType, createdAt, lastModifiedBy, lastModifiedByType, lastModifiedAt);
        }

        /// <summary> Initializes a new instance of EncryptionProperties. </summary>
        /// <param name="status"> Indicates whether or not the encryption is enabled for container registry. </param>
        /// <param name="keyVaultProperties"> Key vault properties. </param>
        public static Azure.ResourceManager.Fake.Models.EncryptionProperties EncryptionProperties(Azure.ResourceManager.Fake.Models.EncryptionStatus? status = default, Azure.ResourceManager.Fake.Models.KeyVaultProperties keyVaultProperties = default)
        {
            return new Azure.ResourceManager.Fake.Models.EncryptionProperties(status, keyVaultProperties);
        }

        /// <summary> Initializes a new instance of KeyVaultProperties. </summary>
        /// <param name="keyIdentifier"> Key vault uri to access the encryption key. </param>
        /// <param name="identity"> The client ID of the identity which will be used to access key vault. </param>
        public static Azure.ResourceManager.Fake.Models.KeyVaultProperties KeyVaultProperties(string keyIdentifier = default, string identity = default)
        {
            return new Azure.ResourceManager.Fake.Models.KeyVaultProperties(keyIdentifier, identity);
        }

        /// <summary> Initializes a new instance of CheckNameAvailabilityRequest. </summary>
        /// <param name="name"> The name of the resource for which availability needs to be checked. </param>
        /// <param name="resourceType"> The resource type. </param>
        public static CheckNameAvailabilityRequest CheckNameAvailabilityRequest(string name = default, ResourceType resourceType = default)
        {
            return new CheckNameAvailabilityRequest(name, resourceType);
        }

        /// <summary> Initializes a new instance of CheckNameAvailabilityResponse. </summary>
        /// <param name="nameAvailable"> Indicates if the resource name is available. </param>
        /// <param name="reason"> The reason why the given name is not available. </param>
        /// <param name="message"> Detailed reason why the given name is available. </param>
        public static CheckNameAvailabilityResponse CheckNameAvailabilityResponse(bool? nameAvailable = default, CheckNameAvailabilityReason? reason = default, string message = default)
        {
            return new CheckNameAvailabilityResponse(nameAvailable, reason, message);
        }

        /// <summary> Initializes a new instance of PrivateEndpoint. </summary>
        /// <param name="id"> The ARM identifier for Private Endpoint. </param>
        public static PrivateEndpoint PrivateEndpoint(ResourceIdentifier id = default)
        {
            return new PrivateEndpoint(id);
        }

        /// <summary> Initializes a new instance of PrivateLinkServiceConnectionState. </summary>
        /// <param name="status"> Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. </param>
        /// <param name="description"> The reason for approval/rejection of the connection. </param>
        /// <param name="actionsRequired"> A message indicating if changes on the service provider require any updates on the consumer. </param>
        public static PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState(PrivateEndpointServiceConnectionStatus? status = default, string description = default, string actionsRequired = default)
        {
            return new PrivateLinkServiceConnectionState(status, description, actionsRequired);
        }

        /// <summary> Initializes a new instance of PrivateLinkResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="groupId"> The private link resource group id. </param>
        /// <param name="requiredMembers"> The private link resource required member names. </param>
        /// <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        public static PrivateLinkResourceData PrivateLinkResourceData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, IReadOnlyList<string> requiredMembers = default, IReadOnlyList<string> requiredZoneNames = default)
        {
            return new PrivateLinkResourceData(id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames);
        }

        /// <summary> Initializes a new instance of PrivateEndpointConnectionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="privateEndpoint"> The resource of private end point. </param>
        /// <param name="privateLinkServiceConnectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        /// <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        public static PrivateEndpointConnectionData PrivateEndpointConnectionData(ResourceIdentifier id = default, string name = default, ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, PrivateEndpoint privateEndpoint = default, PrivateLinkServiceConnectionState privateLinkServiceConnectionState = default, PrivateEndpointConnectionProvisioningState? provisioningState = default)
        {
            return new PrivateEndpointConnectionData(id, name, resourceType, systemData, privateEndpoint, privateLinkServiceConnectionState, provisioningState);
        }

        /// <summary> Initializes a new instance of PrivateEndpointConnectionList. </summary>
        /// <param name="value"> Array of private endpoint connections. </param>
        public static PrivateEndpointConnectionList PrivateEndpointConnectionList(IReadOnlyList<PrivateEndpointConnectionData> value = default)
        {
            return new PrivateEndpointConnectionList(value);
        }

        /// <summary> Initializes a new instance of PrivateLinkResourceList. </summary>
        /// <param name="value"> Array of private link resources. </param>
        public static PrivateLinkResourceList PrivateLinkResourceList(IReadOnlyList<PrivateLinkResourceData> value = default)
        {
            return new PrivateLinkResourceList(value);
        }
    }
}
