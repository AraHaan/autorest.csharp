// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using MgmtParamOrdering;

namespace MgmtParamOrdering.Models
{
    internal static class MgmtParamOrderingModelFactory
    {

        /// <summary> Initializes a new instance of AvailabilitySetListResult. </summary>
        /// <param name="value"> The list of availability sets. </param>
        /// <param name="nextLink"> The URI to fetch the next page of AvailabilitySets. Call ListNext() with this URI to fetch the next page of AvailabilitySets. </param>
        public static AvailabilitySetListResult AvailabilitySetListResult(IReadOnlyList<AvailabilitySetData> value = default, string nextLink = default)
        {
            return new AvailabilitySetListResult(value, nextLink);
        }

        /// <summary> Initializes a new instance of DedicatedHostListResult. </summary>
        /// <param name="value"> The list of dedicated hosts. </param>
        /// <param name="nextLink"> The URI to fetch the next page of dedicated hosts. Call ListNext() with this URI to fetch the next page of dedicated hosts. </param>
        public static DedicatedHostListResult DedicatedHostListResult(IReadOnlyList<DedicatedHostData> value = default, string nextLink = default)
        {
            return new DedicatedHostListResult(value, nextLink);
        }

        /// <summary> Initializes a new instance of EnvironmentContainer. </summary>
        /// <param name="description"> The asset description text. </param>
        /// <param name="properties"> The asset property dictionary. </param>
        /// <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        public static EnvironmentContainer EnvironmentContainer(string description = default, IDictionary<string, string> properties = default, IDictionary<string, string> tags = default)
        {
            return new EnvironmentContainer(description, properties, tags);
        }

        /// <summary> Initializes a new instance of ErrorResponse. </summary>
        /// <param name="error"> The error object. </param>
        public static ErrorResponse ErrorResponse(Azure.ResourceManager.Models.ErrorDetail error = default)
        {
            return new ErrorResponse(error);
        }

        /// <summary> Initializes a new instance of ErrorDetail. </summary>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="target"> The error target. </param>
        /// <param name="details"> The error details. </param>
        /// <param name="additionalInfo"> The error additional info. </param>
        public static ErrorDetail ErrorDetail(string code = default, string message = default, string target = default, IReadOnlyList<Azure.ResourceManager.Models.ErrorDetail> details = default, IReadOnlyList<Azure.ResourceManager.Models.ErrorAdditionalInfo> additionalInfo = default)
        {
            return new ErrorDetail(code, message, target, details, additionalInfo);
        }

        /// <summary> Initializes a new instance of ErrorAdditionalInfo. </summary>
        /// <param name="errorAdditionalInfoType"> The additional info type. </param>
        /// <param name="info"> The additional info. </param>
        public static ErrorAdditionalInfo ErrorAdditionalInfo(string errorAdditionalInfoType = default, BinaryData info = default)
        {
            return new ErrorAdditionalInfo(errorAdditionalInfoType, info);
        }

        /// <summary> Initializes a new instance of VirtualMachineScaleSetInstanceView. </summary>
        /// <param name="virtualMachine"> The instance view status summary for the virtual machine scale set. </param>
        public static VirtualMachineScaleSetInstanceView VirtualMachineScaleSetInstanceView(string virtualMachine = default)
        {
            return new VirtualMachineScaleSetInstanceView(virtualMachine);
        }

        /// <summary> Initializes a new instance of VirtualMachineScaleSetListResult. </summary>
        /// <param name="value"> The list of virtual machine scale sets. </param>
        /// <param name="nextLink"> The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of VMSS. </param>
        public static VirtualMachineScaleSetListResult VirtualMachineScaleSetListResult(IReadOnlyList<VirtualMachineScaleSetData> value = default, string nextLink = default)
        {
            return new VirtualMachineScaleSetListResult(value, nextLink);
        }
    }
}
