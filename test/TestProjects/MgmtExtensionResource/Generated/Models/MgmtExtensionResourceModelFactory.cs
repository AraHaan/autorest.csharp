// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using MgmtExtensionResource;

namespace MgmtExtensionResource.Models
{
    internal static class MgmtExtensionResourceModelFactory
    {
        /// <summary> Initializes a new instance of DnsNameAvailabilityResult. </summary>
        /// <param name="available"> Domain availability (True/False). </param>
        public static DnsNameAvailabilityResult DnsNameAvailabilityResult(bool? available = default)
        {
            return new DnsNameAvailabilityResult(available);
        }

        /// <summary> Initializes a new instance of CloudError. </summary>
        /// <param name="errorResponse"> Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. </param>
        public static CloudError CloudError(ErrorResponse errorResponse = default)
        {
            return new CloudError(errorResponse);
        }

        /// <summary> Initializes a new instance of ErrorResponse. </summary>
        /// <param name="error"> The details of the error. </param>
        public static ErrorResponse ErrorResponse(string error = default)
        {
            return new ErrorResponse(error);
        }

        /// <summary> Initializes a new instance of ParameterDefinitionsValue. </summary>
        /// <param name="parameterType"> The data type of the parameter. </param>
        /// <param name="allowedValues"> The allowed values for the parameter. </param>
        /// <param name="defaultValue"> The default value for the parameter if no value is provided. </param>
        /// <param name="metadata"> General metadata for the parameter. </param>
        public static ParameterDefinitionsValue ParameterDefinitionsValue(ParameterType? parameterType = default, IList<BinaryData> allowedValues = default, BinaryData defaultValue = default, ParameterDefinitionsValueMetadata metadata = default)
        {
            return new ParameterDefinitionsValue(parameterType, allowedValues, defaultValue, metadata);
        }

        /// <summary> Initializes a new instance of ParameterDefinitionsValueMetadata. </summary>
        /// <param name="displayName"> The display name for the parameter. </param>
        /// <param name="description"> The description of the parameter. </param>
        /// <param name="strongType"> Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from. </param>
        /// <param name="assignPermissions"> Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        public static ParameterDefinitionsValueMetadata ParameterDefinitionsValueMetadata(string displayName = default, string description = default, string strongType = default, bool? assignPermissions = default, IDictionary<string, BinaryData> additionalProperties = default)
        {
            return new ParameterDefinitionsValueMetadata(displayName, description, strongType, assignPermissions, additionalProperties);
        }

        /// <summary> Initializes a new instance of PolicyDefinitionListResult. </summary>
        /// <param name="value"> An array of policy definitions. </param>
        /// <param name="nextLink"> The URL to use for getting the next set of results. </param>
        public static PolicyDefinitionListResult PolicyDefinitionListResult(IReadOnlyList<PolicyDefinitionData> value = default, string nextLink = default)
        {
            return new PolicyDefinitionListResult(value, nextLink);
        }
    }
}
