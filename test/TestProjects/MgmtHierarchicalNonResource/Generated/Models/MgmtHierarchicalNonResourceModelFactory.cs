// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using MgmtHierarchicalNonResource;

namespace MgmtHierarchicalNonResource.Models
{
    internal static class MgmtHierarchicalNonResourceModelFactory
    {
        /// <summary> Initializes a new instance of SharedGalleryList. </summary>
        /// <param name="value"> A list of shared galleries. </param>
        /// <param name="nextLink"> The uri to fetch the next page of shared galleries. Call ListNext() with this to fetch the next page of shared galleries. </param>
        public static SharedGalleryList SharedGalleryList(IReadOnlyList<SharedGalleryData> value = default, string nextLink = default)
        {
            return new SharedGalleryList(value, nextLink);
        }

        /// <summary> Initializes a new instance of PirSharedGalleryResource. </summary>
        /// <param name="name"> Resource name. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="uniqueId"> The unique id of this shared gallery. </param>
        public static PirSharedGalleryResource PirSharedGalleryResource(string name = default, string location = default, string uniqueId = default)
        {
            return new PirSharedGalleryResource(name, location, uniqueId);
        }

        /// <summary> Initializes a new instance of PirResource. </summary>
        /// <param name="name"> Resource name. </param>
        /// <param name="location"> Resource location. </param>
        public static PirResource PirResource(string name = default, string location = default)
        {
            return new PirResource(name, location);
        }

        /// <summary> Initializes a new instance of CloudError. </summary>
        /// <param name="error"> Api error. </param>
        public static CloudError CloudError(ApiError error = default)
        {
            return new CloudError(error);
        }

        /// <summary> Initializes a new instance of ApiError. </summary>
        /// <param name="details"> The Api error details. </param>
        /// <param name="innererror"> The Api inner error. </param>
        /// <param name="code"> The error code. </param>
        /// <param name="target"> The target of the particular error. </param>
        /// <param name="message"> The error message. </param>
        public static ApiError ApiError(IReadOnlyList<ApiErrorBase> details = default, InnerError innererror = default, string code = default, string target = default, string message = default)
        {
            return new ApiError(details, innererror, code, target, message);
        }

        /// <summary> Initializes a new instance of ApiErrorBase. </summary>
        /// <param name="code"> The error code. </param>
        /// <param name="target"> The target of the particular error. </param>
        /// <param name="message"> The error message. </param>
        public static ApiErrorBase ApiErrorBase(string code = default, string target = default, string message = default)
        {
            return new ApiErrorBase(code, target, message);
        }

        /// <summary> Initializes a new instance of InnerError. </summary>
        /// <param name="exceptiontype"> The exception type. </param>
        /// <param name="errordetail"> The internal error message or exception dump. </param>
        public static InnerError InnerError(string exceptiontype = default, string errordetail = default)
        {
            return new InnerError(exceptiontype, errordetail);
        }

        /// <summary> Initializes a new instance of SharedGalleryImageList. </summary>
        /// <param name="value"> A list of shared gallery images. </param>
        /// <param name="nextLink"> The uri to fetch the next page of shared gallery images. Call ListNext() with this to fetch the next page of shared gallery images. </param>
        public static SharedGalleryImageList SharedGalleryImageList(IReadOnlyList<SharedGalleryImage> value = default, string nextLink = default)
        {
            return new SharedGalleryImageList(value, nextLink);
        }

        /// <summary> Initializes a new instance of SharedGalleryImage. </summary>
        /// <param name="name"> Resource name. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="uniqueId"> The unique id of this shared gallery. </param>
        /// <param name="osType"> This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**. </param>
        /// <param name="osState"> This property allows the user to specify whether the virtual machines created under this image are &apos;Generalized&apos; or &apos;Specialized&apos;. </param>
        /// <param name="endOfLifeDate"> The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable. </param>
        /// <param name="identifier"> This is the gallery image definition identifier. </param>
        /// <param name="recommended"> The properties describe the recommended machine configuration for this Image Definition. These properties are updatable. </param>
        /// <param name="disallowed"> Describes the disallowed disk types. </param>
        /// <param name="hyperVGeneration"> The hypervisor generation of the Virtual Machine. Applicable to OS disks only. </param>
        /// <param name="features"> A list of gallery image features. </param>
        /// <param name="purchasePlan"> Describes the gallery image definition purchase plan. This is used by marketplace images. </param>
        public static SharedGalleryImage SharedGalleryImage(string name = default, string location = default, string uniqueId = default, OperatingSystemTypes? osType = default, OperatingSystemStateTypes? osState = default, DateTimeOffset? endOfLifeDate = default, GalleryImageIdentifier identifier = default, RecommendedMachineConfiguration recommended = default, Disallowed disallowed = default, HyperVGeneration? hyperVGeneration = default, IReadOnlyList<GalleryImageFeature> features = default, ImagePurchasePlan purchasePlan = default)
        {
            return new SharedGalleryImage(name, location, uniqueId, osType, osState, endOfLifeDate, identifier, recommended, disallowed, hyperVGeneration, features, purchasePlan);
        }

        /// <summary> Initializes a new instance of GalleryImageIdentifier. </summary>
        /// <param name="publisher"> The name of the gallery image definition publisher. </param>
        /// <param name="offer"> The name of the gallery image definition offer. </param>
        /// <param name="sku"> The name of the gallery image definition SKU. </param>
        public static GalleryImageIdentifier GalleryImageIdentifier(string publisher = default, string offer = default, string sku = default)
        {
            return new GalleryImageIdentifier(publisher, offer, sku);
        }

        /// <summary> Initializes a new instance of RecommendedMachineConfiguration. </summary>
        /// <param name="vCpus"> Describes the resource range. </param>
        /// <param name="memory"> Describes the resource range. </param>
        public static RecommendedMachineConfiguration RecommendedMachineConfiguration(ResourceRange vCpus = default, ResourceRange memory = default)
        {
            return new RecommendedMachineConfiguration(vCpus, memory);
        }

        /// <summary> Initializes a new instance of ResourceRange. </summary>
        /// <param name="min"> The minimum number of the resource. </param>
        /// <param name="max"> The maximum number of the resource. </param>
        public static ResourceRange ResourceRange(int? min = default, int? max = default)
        {
            return new ResourceRange(min, max);
        }

        /// <summary> Initializes a new instance of GalleryImageFeature. </summary>
        /// <param name="name"> The name of the gallery image feature. </param>
        /// <param name="value"> The value of the gallery image feature. </param>
        public static GalleryImageFeature GalleryImageFeature(string name = default, string value = default)
        {
            return new GalleryImageFeature(name, value);
        }

        /// <summary> Initializes a new instance of ImagePurchasePlan. </summary>
        /// <param name="name"> The plan ID. </param>
        /// <param name="publisher"> The publisher ID. </param>
        /// <param name="product"> The product ID. </param>
        public static ImagePurchasePlan ImagePurchasePlan(string name = default, string publisher = default, string product = default)
        {
            return new ImagePurchasePlan(name, publisher, product);
        }

        /// <summary> Initializes a new instance of SharedGalleryImageVersionList. </summary>
        /// <param name="value"> A list of shared gallery images versions. </param>
        /// <param name="nextLink"> The uri to fetch the next page of shared gallery image versions. Call ListNext() with this to fetch the next page of shared gallery image versions. </param>
        public static SharedGalleryImageVersionList SharedGalleryImageVersionList(IReadOnlyList<SharedGalleryImageVersion> value = default, string nextLink = default)
        {
            return new SharedGalleryImageVersionList(value, nextLink);
        }

        /// <summary> Initializes a new instance of SharedGalleryImageVersion. </summary>
        /// <param name="name"> Resource name. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="uniqueId"> The unique id of this shared gallery. </param>
        /// <param name="publishedDate"> The published date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable. </param>
        /// <param name="endOfLifeDate"> The end of life date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable. </param>
        public static SharedGalleryImageVersion SharedGalleryImageVersion(string name = default, string location = default, string uniqueId = default, DateTimeOffset? publishedDate = default, DateTimeOffset? endOfLifeDate = default)
        {
            return new SharedGalleryImageVersion(name, location, uniqueId, publishedDate, endOfLifeDate);
        }
    }
}
